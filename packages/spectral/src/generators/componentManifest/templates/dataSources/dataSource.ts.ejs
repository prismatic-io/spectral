import type {
  CreateComponentManifestDataSource,
  DataSourceReferenceConfigVar
} from "@prismatic-io/spectral";
<%- include('../partials/imports.ejs', { imports, helpers }) -%>

export interface <%= helpers.capitalizeFirstLetter(dataSource.key) %>Props {
  type: "dataSource";
  component: "<%= component.key %>";
  key: "<%= dataSource.key %>";
  values: {
<%- include('../partials/inputTypes.ejs', { inputs: dataSource.inputs }) -%>
  };
}

/**
 * <%= dataSource.label %>
 *
 * @comments <%= dataSource.comments %>
 */
export const <%= dataSource.key %> = ({
  values,
  ...dataSourceProps
}: CreateComponentManifestDataSource<<%= helpers.capitalizeFirstLetter(dataSource.key) %>Props>): DataSourceReferenceConfigVar<<%= helpers.capitalizeFirstLetter(dataSource.key) %>Props> => ({
  ...dataSourceProps,
  dataSourceType: "string",
  dataSource: {
    component: "<%= component.key %>",
    key: "<%= dataSource.key %>",
    values: {
      <%_ dataSource.inputs.forEach((input) => { -%>
      <%= input.key %>: values.<%= input.key %> ? { value: values.<%= input.key %> } : undefined,
      <%_ }); -%>
    },
  },
});
